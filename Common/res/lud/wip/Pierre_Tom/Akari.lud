(game "Akari" 
    (players 1) 
    (equipment { 
        (board (square <Challenge:size>) (values Cell (range 1)))
        (hints { <Challenge:hints> })
        <Challenge:regions>
        (piece "light" P1)


    }) 
    (rules
        (play (satisfy {(forAll Hint (is Count (sites Around (from) Orthogonal includeSelf:False) (hint)))
                        (forAll Cell (at Least (sites Direction from:(from) Orthogonal included:true stop:(or (is In (sites "Walls")) (is In (sites "Hints"))) stopIncluded:false) 1))
                        (at Most "Line" 1)
                        (is Sum "Walls" 0)
        })
)
        (end (if (is Solved) (result P1 Win)))
    )
)

(option "Challenge" <Challenge> args:{<size> <hints> <regions>}
{
(item "1" 
    <7>
    <
      (hint {0} 1)
      (hint {4} 1)
      (hint {12} 1)
      (hint {31} 2)
      (hint {36} 4)
      (hint {39} 1)

    >
    <
    //Lines
    (regions "Line" {1 2 3})
    (regions "Line" {5 6})
    (regions "Line" {10 11})
    (regions "Line" {14 15 16})
    (regions "Line" {18 19 20})
    (regions "Line" {23 24 25})
    (regions "Line" {28 29 30})
    (regions "Line" {32 33 34})
    (regions "Line" {37 38})
    (regions "Line" {42 43})
    (regions "Line" {45 46 47})

    //Columns
    (regions "Line" {14 21 28 35 42})
    (regions "Line" {1 8 15})
    (regions "Line" {16 23 30 37})
    (regions "Line" {3 10})
    (regions "Line" {38 45})
    (regions "Line" {11 18 25 32})
    (regions "Line" {33 40 47})
    (regions "Line" {6 13 20 27 34 41})

    (regions "Walls" {7 9 17 22 26 41 44 48})
    
    (regions "Hints" {0 4 12 31 36 39})
    

    >
    ""
) 

})
(metadata        
        (graphics {
        	(piece Rename piece:"1" "Light")
        	(region Colour "Hints" (colour 92 109 115))
            (region Colour "Walls" (colour 92 109 115))
            //(region Colour "Hints" fillColour:(colour White))
        })
)
