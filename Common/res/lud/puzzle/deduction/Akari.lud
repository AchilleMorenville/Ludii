(game "Akari" 
    (players 1) 
    (equipment { 
        (board (square <Challenge:size>) (values Cell (range 1)))
        (hints { <Challenge:hints> })
    	<Challenge:regions>


    }) 
    (rules
        (play (satisfy {(forAll Hint (is Count (sites Around (from) Orthogonal includeSelf:False) (hint)))
        				(forAll Cell (at Least (sites Direction from:(from) Orthogonal included:true stop:(is In (sites "Walls")) stopIncluded:false) 1))
        				(at Most "Line" 1)
        				(is Sum "Walls" 0)
        })
)
        (end (if (is Solved) (result P1 Win)))
    )
)

(option "Challenge" <Challenge> args:{<size> <hints> <regions>}
{
(item "1" 
    <7>
    <
      (hint {0} 1)
      (hint {4} 1)
//      (hint {7})
//      (hint {9})
      (hint {12} 1)
//      (hint {17})
//      (hint {22})
//      (hint {26})
      (hint {31} 2)
      (hint {36} 4)
      (hint {39} 1)
//      (hint {41})
//      (hint {44})
//      (hint {48})
    >
    <
    //Lines
	(regions "Line" {1 2 3})
	(regions "Line" {5 6})
	(regions "Line" {10 11})
	(regions "Line" {14 15 16})
	(regions "Line" {18 19 20})
	(regions "Line" {23 24 25})
	(regions "Line" {28 29 30})
	(regions "Line" {32 33 34})
	(regions "Line" {37 38})
	(regions "Line" {42 43})
	(regions "Line" {45 46 47})

	//Columns
	(regions "Line" {14 21 28 35 42})
	(regions "Line" {1 8 15})
	(regions "Line" {16 23 30 37})
	(regions "Line" {3 10})
	(regions "Line" {38 45})
	(regions "Line" {11 18 25 32})
	(regions "Line" {33 40 47})
	(regions "Line" {6 13 20 27 34 41})

	(regions "Walls" {7 9 17 22 26 41 44 48})
	
	

    >
    ""
) 

})
(metadata

	    
	    (graphics {
	    	(board Style Akari)
	    })
)


